import path from "path";
import { promises as fs } from "fs";

import { unmarshal } from "./unmarshal";

test.skip("map file is unmarshaled", async function () {
  const filename = path.join(__dirname, "../fixtures/map-test.map");
  const content = await fs.readFile(filename, "utf-8");
  const unmarshalled = Array.from(unmarshal(filename, content));

  const normals = Float32Array.from([
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    1,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    -1,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    0,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    0,
    -1,
    0,
    0,
    -1,
  ]);
  const textures = Float32Array.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
  const uvs = Float32Array.from([
    -0.125,
    -0.03125,
    -0.125,
    0.03125,
    0.125,
    -0.03125,
    0.125,
    0.03125,
    -0.125,
    -0.03125,
    -0.125,
    0.03125,
    0.125,
    -0.03125,
    0.125,
    0.03125,
    -0.125,
    -0.125,
    -0.125,
    0.125,
    0.125,
    -0.125,
    0.125,
    0.125,
    -0.125,
    -0.125,
    -0.125,
    0.125,
    0.125,
    -0.125,
    0.125,
    0.125,
    -0.125,
    -0.03125,
    -0.125,
    0.03125,
    0.125,
    -0.03125,
    0.125,
    0.03125,
    -0.125,
    -0.03125,
    -0.125,
    0.03125,
    0.125,
    -0.03125,
    0.125,
    0.03125,
  ]);
  const vertices = Float32Array.from([
    -64,
    -16,
    -64,
    -64,
    16,
    -64,
    64,
    -16,
    -64,
    64,
    16,
    -64,
    -64,
    -16,
    -64,
    -64,
    16,
    -64,
    -64,
    -16,
    64,
    -64,
    16,
    64,
    -64,
    -16,
    -64,
    64,
    -16,
    -64,
    -64,
    -16,
    64,
    64,
    -16,
    64,
    -64,
    16,
    -64,
    64,
    16,
    -64,
    -64,
    16,
    64,
    64,
    16,
    64,
    64,
    -16,
    -64,
    64,
    16,
    -64,
    64,
    -16,
    64,
    64,
    16,
    64,
    -64,
    -16,
    64,
    -64,
    16,
    64,
    64,
    -16,
    64,
    64,
    16,
    64,
  ]);

  // prettier-ignore
  expect(unmarshalled).toEqual([
    {
      classname: "player",
      origin: { x: -32, y: 40, z: -32 },
      transferables: [],
    },
    {
      classname: "light_point",
      color: "FFC000",
      decay: 2,
      intensity: 255,
      origin: { x: -32, y: 40, z: 16 },
      transferables: [],
    },
    {
      classname: "worldspawn",
      normals: normals,
      textureNames: ["__TB_empty"],
      textures: textures,
      uvs: uvs,
      vertices: vertices,
      transferables: [
        normals.buffer,
        textures.buffer,
        uvs.buffer,
        vertices.buffer,
      ],
    },
  ]);
});
